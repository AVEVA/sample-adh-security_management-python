trigger:
  batch: true
  branches:
    include:
      - main

pr:
  branches:
    include:
      - main

schedules:
  - cron: '0 0 * * 0'
    displayName: Weekly build
    branches:
      include:
        - main
    always: true

resources:
  repositories:
    - repository: OpsGuildAutomationRepo
      type: git
      name: DevOps/opsguild.automation
      ref: refs/heads/main
    - repository: templates
      type: github
      name: AVEVA/AVEVA-Samples
      endpoint: AVEVA

variables:
  - name: analysisProject
    value: OCS_Security_Python

parameters:
  - name: pool
    default: DevOps Managed Containers Build
  - name: containerDemands
    type: object
    default: ['Agent.OS -equals Linux']

jobs:
  - job: Tests
    condition: ne(variables['Build.Reason'], 'Schedule')
    pool:
      name: ${{ parameters.pool }}
      demands: ${{ parameters.containerDemands }}
    variables:
      - name: ContactGivenName
        value: Big
      - name: ContactSurname
        value: Tex
      - name: ContactEmail
        value: $(AuthorizationUsername)
    steps:
      - template: '/miscellaneous/build_templates/appsettings.yml@templates'
        parameters:
          secrets: 'TenantId, NamespaceId, CommunityId, ClientId, ClientSecret, AuthorizationUsername, Resource'

      - script: |
          echo Install test tools   
          pip install pytest
          echo Install requirements
          pip install -r requirements.txt
          echo Run tests
          python -m pytest --junitxml=junit/test-results.xml ./test.py
          echo Complete
        displayName: 'Run tests'
      - task: PublishTestResults@2
        inputs:
          testResultsFiles: '**/test-*.xml'
          failTaskOnFailedTests: true
          testRunTitle: '$(Agent.JobName) on $(Agent.OS)'
        displayName: 'Publish test results'
        condition: always()

  - template: '/miscellaneous/build_templates/code-analysis.yml@templates'
    parameters:
      useRequirementsTxt: true
